{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","searchValue","setSearchValue","copyText","setCopyText","copy","setCopy","filterActive","setFilterActive","searchActive","setSearchActive","className","id","val","map","item","key","onClick","console","log","searchBtnFun","placeholder","type","value","onChange","e","target","toLowerCase","filterBtnFun","JSONDATA","filter","first_name","includes","last_name","email","ip_address","text","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOA6FeA,MAxFf,WAEE,IAFa,EAewBC,mBAAS,IAfjC,mBAeNC,EAfM,KAeMC,EAfN,OAgBkBF,mBAAS,IAhB3B,mBAgBNG,EAhBM,KAgBGC,EAhBH,OAkBWJ,mBAAS,GAlBpB,mBAkBNK,EAlBM,KAkBAC,EAlBA,OAmB0BN,mBAAS,GAnBnC,mBAmBNO,EAnBM,KAmBOC,EAnBP,OAoB0BR,mBAAS,GApBnC,mBAoBNS,EApBM,KAoBOC,EApBP,KAwCb,OACE,sBAAKC,UAAU,SAAf,UACKR,GAAY,sBAAKQ,UAAU,mBAAf,UAAmCR,EAAnC,iBACb,qBAAKQ,UAAU,eAAf,wGACA,qBAAKA,UAAU,cAAf,SApCS,CACT,CAACC,GAAG,EAAEC,IAAI,aACV,CAACD,GAAG,EAAEC,IAAI,WACV,CAACD,GAAG,EAAEC,IAAI,QACV,CAACD,GAAG,EAAEC,IAAI,aAiCEC,KAAI,SAACC,EAAKC,GACd,OAAO,wBAAkBL,UAAS,sBAAiBI,EAAKH,KAAOH,EAAe,SAAW,IAAMQ,QAAS,kBAlBjG,SAACF,GAChBL,EAAgBK,EAAKH,IACrBM,QAAQC,IAAIV,GAgB0GW,CAAaL,IAApH,SAA4HA,EAAKF,KAApHG,QAG9B,uBAAOK,YAAY,yBAAoBC,KAAK,OAAOC,MAAOtB,EAAauB,SAAU,SAACC,GAAD,OAAOvB,EAAeuB,EAAEC,OAAOH,MAAMI,kBACpH,qBAAKhB,UAAU,cAAf,SAhDS,CACT,CAACC,GAAG,EAAEC,IAAI,qBACV,CAACD,GAAG,EAAEC,IAAI,mBACV,CAACD,GAAG,EAAEC,IAAI,gBACV,CAACD,GAAG,EAAEC,IAAI,qBA6CEC,KAAI,SAACC,EAAKC,GACd,OAAO,wBAAkBL,UAAS,sBAAiBI,EAAKH,KAAOL,EAAe,SAAW,IAAMU,QAAS,kBA/BjG,SAACF,GAClBT,EAAQS,EAAKH,IACbJ,EAAgBO,EAAKH,IA6BmGgB,CAAab,IAApH,SAA4HA,EAAKF,KAApHG,QAG7B,qBAAKL,UAAU,gBAAf,SAEKkB,EAASC,QAAO,SAAAjB,GAEb,MAAmB,KAAhBZ,GACuB,IAAjBQ,GAAsBI,EAAIkB,WAAWJ,cAAcK,SAAS/B,IAC3C,IAAjBQ,GAAsBI,EAAIoB,UAAUN,cAAcK,SAAS/B,IAC1C,IAAjBQ,GAAsBI,EAAIqB,MAAMP,cAAcK,SAAS/B,IACtC,IAAjBQ,GAAsBI,EAAIsB,WAAWR,cAAcK,SAAS/B,GAJtCY,OAI1B,KAENC,KAAI,SAACD,EAAIG,GACL,OAAO,cAAC,kBAAD,CAA2BoB,KACrB,IAAT/B,EAAaQ,EAAIkB,WACJ,IAAT1B,EAAaQ,EAAIoB,UACJ,IAAT5B,EAAaQ,EAAIqB,MACJ,IAAT7B,EAAaQ,EAAIsB,WACb,GALb,SAQH,qBAAIlB,QAAS,kBAzCTF,EAyC8BF,EAxCtC,IAATR,GAAcD,EAAYW,EAAKgB,YACtB,IAAT1B,GAAcD,EAAYW,EAAKkB,WACtB,IAAT5B,GAAcD,EAAYW,EAAKmB,YACtB,IAAT7B,GAAcD,EAAYW,EAAKoB,aAJf,IAACpB,GAyCoCJ,UAAU,qBAAlD,UACI,+BAAKE,EAAIkB,WAAT,IAAsBlB,EAAIoB,UAA1B,OACA,+BAAKpB,EAAIqB,MAAT,OACA,+BAAKrB,EAAIsB,WAAT,WAXqBnB,YC3DhCqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.bfa4fb4a.chunk.js","sourcesContent":["import './App.css';\nimport JSONDATA from './MOCK_DATA.json'\nimport {useState} from \"react\";\nimport {CopyToClipboard} from \"react-copy-to-clipboard/lib/Component\";\n\nfunction App() {\n\n  const FILTER = [\n        {id:0,val:\"İsim Kopyala\"},\n        {id:1,val:\"Soyisim Kopyala\"},\n        {id:2,val:\"Mail Kopyala\"},\n        {id:3,val:\"Ip_Adres Kopyala\"}\n    ]\n  const SEARCH = [\n        {id:0,val:\"İsim\"},\n        {id:1,val:\"Soyisim\"},\n        {id:2,val:\"Mail\"},\n        {id:3,val:\"Ip_Adres\"}\n    ]\n\n  const [searchValue,setSearchValue] = useState('');\n  const [copyText,setCopyText] = useState('');\n\n  const [copy, setCopy] = useState(0);\n  const [filterActive,setFilterActive] = useState(0);\n  const [searchActive,setSearchActive] = useState(0);\n  const filterBtnFun = (item) => {\n      setCopy(item.id);\n      setFilterActive(item.id);\n  }\n\n\n\n  const searchBtnFun = (item) => {\n        setSearchActive(item.id);\n        console.log(searchActive);\n  }\n\n  const handleCopyText = (item) => {\n      if(copy === 0) { setCopyText(item.first_name)}\n      if(copy === 1) { setCopyText(item.last_name)}\n      if(copy === 2) { setCopyText(item.email)}\n      if(copy === 3) { setCopyText(item.ip_address)}\n  }\n\n  return (\n    <div className=\"filter\">\n        {copyText && <div className=\"filter-copy-text\">{copyText} Copied !!!</div>}\n        <div className=\"filter-title\">ARAMA YAPMAK İSTEDİĞİNİZ FİLTREYİ SEÇİNİZ.</div>\n        <div className=\"filter-list\">\n            {SEARCH.map((item,key) => {\n                return <button key={key} className={`filter-item ${item.id === searchActive ? 'active' : ''}`} onClick={() => searchBtnFun(item)}>{item.val}</button>\n            })}\n        </div>\n      <input placeholder=\"Bir şeyler Ara...\" type=\"text\" value={searchValue} onChange={(e) => setSearchValue(e.target.value.toLowerCase())}/>\n        <div className=\"filter-list\">\n            {FILTER.map((item,key) => {\n                return <button key={key} className={`filter-item ${item.id === filterActive ? 'active' : ''}`} onClick={() => filterBtnFun(item)}>{item.val}</button>\n            })}\n        </div>\n       <div className=\"filter-result\">\n           {/* eslint-disable-next-line array-callback-return */}\n           {JSONDATA.filter(val => {\n\n               if(searchValue === \"\") {return val}\n               else if (searchActive === 0 && val.first_name.toLowerCase().includes(searchValue)) {return val}\n               else if (searchActive === 1 && val.last_name.toLowerCase().includes(searchValue)) {return val}\n               else if (searchActive === 2 && val.email.toLowerCase().includes(searchValue)) {return val}\n               else if (searchActive === 3 && val.ip_address.toLowerCase().includes(searchValue)) {return val}\n\n           }).map((val,key) => {\n                  return <CopyToClipboard key={key} text={\n                      copy === 0 ? val.first_name :\n                          copy === 1 ? val.last_name :\n                              copy === 2 ? val.email :\n                                  copy === 3 ? val.ip_address :\n                                      ''\n                  }\n                  >\n                      <ul onClick={() => handleCopyText(val)} className=\"filter-result-item\">\n                          <li>{val.first_name} {val.last_name} </li>\n                          <li>{val.email} </li>\n                          <li>{val.ip_address} </li>\n                      </ul>\n                  </CopyToClipboard>\n\n           })}\n       </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}